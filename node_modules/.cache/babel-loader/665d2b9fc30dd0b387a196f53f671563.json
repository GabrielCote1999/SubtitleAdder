{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\VoiceRec\\\\FromSpeechToSubtitle\\\\speech\\\\src\\\\Component\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { green } from '@mui/material/colors'; //main color rgb(35 36 44);\n//box color rgb(57 58 66)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [file, getFile] = useState(null); // For the error box\n\n  const [fileFormatError, setErrorFileFormat] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n\n  const handleButtonClick = () => {\n    setSuccess(false);\n    setLoading(true);\n    download();\n  };\n\n  const buttonSx = { ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700]\n      }\n    })\n  }; //When the user click on send video\n\n  const download = async () => {\n    //Send the video to the backend\n    await onDrop(); //Hide the loading animation and show the success one\n\n    setLoading(false);\n    setSuccess(true); //Download the new video to the user computer\n\n    axios({\n      method: \"get\",\n      url: \"http://localhost:3001/download\",\n      responseType: \"blob\",\n      headers: {}\n    }).then(res => {\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"Final.mp4\");\n      document.body.appendChild(link);\n      link.click();\n    }) //if there's an error\n    .catch(error => {\n      alert(error);\n    });\n  }; //Send the Video to the backend\n\n\n  const onDrop = async () => {\n    var formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      return res; //console.log(res);\n    } catch (err) {\n      if (err) {\n        console.log(\"this is the err\", err);\n        setErrorFileFormat(true);\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-2\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"75vw\",\n          height: \"85wh\",\n          backgroundColor: \"rgb(57 58 66)\",\n          alignItems: \"center\",\n          fontSize: \"30\",\n          borderRadius: 2,\n          marginTop: \"10vw\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"S\\xFCB \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"presentation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Send us your video and we will add subtitle to it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downloadBox\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: {\n              p: 1,\n              border: \"1px dashed grey\",\n              width: '40%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: \"18px\",\n                color: \"white\",\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"noFileChosenButton\",\n                type: \"file\",\n                onChange: e => getFile(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 1,\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: buttonSx,\n            disabled: loading,\n            onClick: handleButtonClick,\n            children: success ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Succes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Send video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              color: green[500],\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              marginTop: '-12px',\n              marginLeft: '-12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), fileFormatError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alertDiv\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"Sorry, we only accept mp4 files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l2R882Ac6wEZo8e2XBhSveUKmhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Box","Button","Alert","axios","CircularProgress","green","App","file","getFile","fileFormatError","setErrorFileFormat","loading","setLoading","success","setSuccess","handleButtonClick","download","buttonSx","bgcolor","onDrop","method","url","responseType","headers","then","res","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","catch","error","alert","formData","FormData","append","post","err","console","log","response","msg","width","height","backgroundColor","alignItems","fontSize","borderRadius","marginTop","textAlign","p","border","fontWeight","color","e","target","files","m","position","top","left","marginLeft"],"sources":["E:/Project/VoiceRec/FromSpeechToSubtitle/speech/src/Component/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { green } from '@mui/material/colors';\n\n\n\n\n\n\n\n\n//main color rgb(35 36 44);\n//box color rgb(57 58 66)\n\nfunction App() {\n \n  const [file, getFile] = useState(null);\n\n  // For the error box\n  const [fileFormatError, setErrorFileFormat] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n\n\n\n  const handleButtonClick = () => {\n    setSuccess(false);\n    setLoading(true);\n    download();\n  \n    \n      \n  };\n\n  const buttonSx = {\n    ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700],\n      },\n    }),\n  };\n\n  //When the user click on send video\n  const download = async () => {\n    //Send the video to the backend\n    await onDrop();\n    //Hide the loading animation and show the success one\n    setLoading(false);\n    setSuccess(true);\n    //Download the new video to the user computer\n    axios({\n      method: \"get\",\n      url: \"http://localhost:3001/download\",\n      responseType: \"blob\",\n      headers: {},\n    })\n      .then((res) => {\n        const url = window.URL.createObjectURL(new Blob([res.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"Final.mp4\");\n        document.body.appendChild(link);\n        link.click();\n      })\n      //if there's an error\n      .catch((error) => {\n        alert(error);\n      });\n  };\n\n  //Send the Video to the backend\n  const onDrop = async () => {\n    var formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await axios.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      return (res);\n      //console.log(res);\n    } catch (err) {\n      if (err) {\n        console.log(\"this is the err\", err);\n        setErrorFileFormat(true);\n      } else {\n      console.log(err.response.data.msg);\n\n      }\n    }\n   \n  };\n\n  return (\n    <div className=\"App\" id=\"App\">\n      <div className=\"box-2\">\n        <Box\n          sx={{\n            width: \"75vw\",\n            height: \"85wh\",\n            backgroundColor: \"rgb(57 58 66)\",\n            alignItems: \"center\",\n            fontSize: \"30\",\n            borderRadius: 2,\n            marginTop: \"10vw\",\n            textAlign: \"center\",\n          }}\n        >\n          <div className=\"box-title\">\n            <h1 className=\"title\">SüB </h1>\n            </div>\n            <div className=\"presentation-box\">\n         \n            <p className=\"title\">\n              Send us your video and we will add subtitle to it\n              </p>\n          </div>\n          <div className=\"downloadBox\">\n\n            {/*This is the box to palce the files */}\n            <Box component=\"span\" sx={{ p: 1, border: \"1px dashed grey\", width:'40%' }}>\n              <Button\n                style={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", width:'100%'}}\n              >\n                <input\n                className=\"noFileChosenButton\"\n                  type=\"file\"\n                  onChange={(e) => getFile(e.target.files[0])}\n                />\n              \n              </Button>\n            </Box>\n          </div>\n          <Box sx={{ m: 1, position: 'relative' }}>\n\n    \n        <Button\n          variant=\"contained\"\n          sx={buttonSx}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n\n          {success ? (<p>Succes</p>) : (<p>Send video</p>) }\n        </Button>\n        {loading && (\n          <CircularProgress\n            size={24}\n            sx={{\n              color: green[500],\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              marginTop: '-12px',\n              marginLeft: '-12px',\n            }}\n          />\n        )}\n      </Box>\n        </Box>\n\n      </div>\n\n      {/* This is the alertBox  */}\n      {fileFormatError ? (\n        <div className=\"alertDiv\">\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <Alert severity=\"error\">Sorry, we only accept mp4 files</Alert>\n          </Box>\n        </div>\n      ) : (\n        <div> </div>\n      )}\n      \n      </div>\n\n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}